const SETTINGS = require('../../settings.json')

const getPriceInUSD = (price) => {
  return Math.ceil(price * SETTINGS.EXCHANGE_RATE * SETTINGS.SPECIAL_RATE);
}

const captionIsTooLong = (caption) => {
  if (caption.length > 1023) return true;
  else return false;
}


module.exports = {
  getLotMessage: function ({ author = '–ê–≤—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω', name = '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π –Ω–∞–±–æ—Ä', link = "", price, organizator = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ—Ç', status = false, participants = [] }) {

    let participantsText = participants.length > 0 ? '' : '1.';
    participants.forEach((part, id) => {
      let participantFullName = part?.first_name + ' ' + part?.last_name;
      if (part.username) participantFullName += ` (@${part.username})`
      participantsText += `${id + 1}. ${participantFullName}\n`
    })

    let newCostPerPerson = participants.length > 0 ? price / participants.length : price;
    newCostPerPerson = +newCostPerPerson.toFixed(2);
    let costPerPersonFuture = participants.length > 0 ? price / (participants.length + 1) : price;
    costPerPersonFuture = +costPerPersonFuture.toFixed(2);

    return `<b>${author}</b>
  <i>${name}</i>
  
  üîó <b>–°—Å—ã–ª–∫–∞:</b> <a href='${link}'>—Ç—ã–∫</a>
  üí∞ <b>–¶–µ–Ω–∞:</b> $${price} (${getPriceInUSD(price)}‚ÇΩ)
  
  <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:</b> ${organizator}
  <b>–°—Ç–∞—Ç—É—Å:</b> ${status ? '‚úÖ –û–¢–ö–†–´–¢ –ù–ê–ë–û–†' : '‚ùå –°–ë–û–† –ó–ê–í–ï–†–®–Å–ù'}
  
  <b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b>
  ${participantsText}${participants.length > 0 ? `
  üí∂ <b>–ö–∞–∂–¥—ã–π –ø–ª–∞—Ç–∏—Ç –ø–æ:</b> $${newCostPerPerson} (${Math.ceil(newCostPerPerson * SETTINGS.EXCHANGE_RATE * SETTINGS.SPECIAL_RATE)}‚ÇΩ)` : ''}${status ? `
  
  –ï—Å–ª–∏ —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—à—å—Å—è, —Ç–æ —Ü–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è –±—É–¥–µ—Ç $${costPerPersonFuture} (${getPriceInUSD(costPerPersonFuture)}‚ÇΩ)` : ''}
  
  ${status ? '#opened_lot' : '#closed_lot'}`
  },

  getLotMessageShort: function ({ author = '–ê–≤—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω', name = '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π –Ω–∞–±–æ—Ä', link = "", price, organizator = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ—Ç', status = false, participants = [] }) {

    let participantsText = '';
    participants.forEach((part, id) => {
      let participantFullName = ``;
      if (part.username) {
        participantFullName += `@${part.username}`
      } else {
        participantFullName += part?.first_name
      }
      participantsText += `${participantFullName}; `
    })

    let newCostPerPerson = participants.length > 0 ? price / participants.length : price;
    newCostPerPerson = +newCostPerPerson.toFixed(2);
    let costPerPersonFuture = participants.length > 0 ? price / (participants.length + 1) : price;
    costPerPersonFuture = +costPerPersonFuture.toFixed(2);

    return `<b>${author}</b>
  <i>${name}</i>
  
  üîó <b>–°—Å—ã–ª–∫–∞:</b> <a href='${link}'>—Ç—ã–∫</a>
  üí∞ <b>–¶–µ–Ω–∞:</b> $${price} (${getPriceInUSD(price)}‚ÇΩ)
  
  <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:</b> ${organizator}
  <b>–°—Ç–∞—Ç—É—Å:</b> ${status ? '‚úÖ –û–¢–ö–†–´–¢ –ù–ê–ë–û–†' : '‚ùå –°–ë–û–† –ó–ê–í–ï–†–®–Å–ù'}
  
  <b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b>
  ${participantsText}${participants.length > 0 ? `
  üí∂ <b>–ö–∞–∂–¥—ã–π –ø–ª–∞—Ç–∏—Ç –ø–æ:</b> $${newCostPerPerson} (${Math.ceil(newCostPerPerson * SETTINGS.EXCHANGE_RATE * SETTINGS.SPECIAL_RATE)}‚ÇΩ)` : ''}${status ? `
  
  –ï—Å–ª–∏ —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—à—å—Å—è, —Ç–æ —Ü–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è –±—É–¥–µ—Ç $${costPerPersonFuture} (${getPriceInUSD(costPerPersonFuture)}‚ÇΩ)` : ''}
  
  ${status ? '#opened_lot' : '#closed_lot'}`
  },

  getLotMessageEvenShorter: function ({ author = '–ê–≤—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω', name = '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π –Ω–∞–±–æ—Ä', link = "", price, organizator = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ—Ç', status = false, participants = [] }) {

    let participantsText = '';
    participants.forEach((part, id) => {
      let participantFullName = ``;
      if (part.username) {
        participantFullName += `@${part.username}`
      } else {
        participantFullName += part?.first_name
      }
      participantsText += `${participantFullName}; `
    })

    let newCostPerPerson = participants.length > 0 ? price / participants.length : price;
    newCostPerPerson = +newCostPerPerson.toFixed(2);
    let costPerPersonFuture = participants.length > 0 ? price / (participants.length + 1) : price;
    costPerPersonFuture = +costPerPersonFuture.toFixed(2);

    return `<b>${author.slice(0, 20)}...</b>
  <i>${name.slice(0, 20)}...</i>
  
  <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:</b> ${organizator}
  
  <b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b>
  ${participantsText}${participants.length > 0 ? `
  üí∂ <b>–ö–∞–∂–¥—ã–π –ø–ª–∞—Ç–∏—Ç –ø–æ:</b> $${newCostPerPerson} (${Math.ceil(newCostPerPerson * SETTINGS.EXCHANGE_RATE * SETTINGS.SPECIAL_RATE)}‚ÇΩ)` : ''}`
  },

  getLotMessageLastResort: function ({ author = '–ê–≤—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω', name = '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π –Ω–∞–±–æ—Ä', link = "", price, organizator = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ—Ç', status = false, participants = [] }) {

    let participantsText = '';
    participants.forEach((part, id) => {
      let participantFullName = ``;
      if (part.username) {
        participantFullName += `@${part.username}`
      } else {
        participantFullName += part?.first_name
      }
      participantsText += `${participantFullName}; `
    })

    let newCostPerPerson = participants.length > 0 ? price / participants.length : price;
    newCostPerPerson = +newCostPerPerson.toFixed(2);
    let costPerPersonFuture = participants.length > 0 ? price / (participants.length + 1) : price;
    costPerPersonFuture = +costPerPersonFuture.toFixed(2);

    return `${organizator}
  
  ${participantsText}${participants.length > 0 ? `
  <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> $${newCostPerPerson} (${Math.ceil(newCostPerPerson * SETTINGS.EXCHANGE_RATE * SETTINGS.SPECIAL_RATE)}‚ÇΩ)` : ''}`
  },

  getLotCaption: function ({ author = '–ê–≤—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω', name = '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π –Ω–∞–±–æ—Ä', link = "", price, organizator = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ—Ç', status = false, participants = [] }) {
    let participantsText = participants.length > 0 ? '' : '1.';
    participants.forEach((part, id) => {
      let participantFullName = part?.first_name + ' ' + part?.last_name;
      if (part.username) participantFullName += ` (@${part.username})`
      participantsText += `${id + 1}. ${participantFullName}\n`
    })

    let newCostPerPerson = participants.length > 0 ? price / participants.length : price;
    newCostPerPerson = +newCostPerPerson.toFixed(2);
    let costPerPersonFuture = participants.length > 0 ? price / (participants.length + 1) : price;
    costPerPersonFuture = +costPerPersonFuture.toFixed(2);

    let header = `<b>${author}</b>\n<i>${name}</i>`
    let additionalInfoPart = `üîó <b>–°—Å—ã–ª–∫–∞:</b> <a href='${link}'>—Ç—ã–∫</a>\nüí∞ <b>–¶–µ–Ω–∞:</b> $${price} (${getPriceInUSD(price)}‚ÇΩ)`
    let statusPart = `<b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:</b> ${organizator}\n<b>–°—Ç–∞—Ç—É—Å:</b> ${status ? '‚úÖ –û–¢–ö–†–´–¢ –ù–ê–ë–û–†' : '‚ùå –°–ë–û–† –ó–ê–í–ï–†–®–Å–ù'}`
    let participantsPart = `<b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b>\n${participantsText}`
    let costPart = `${participants.length > 0 ? `üí∂ <b>–ö–∞–∂–¥—ã–π –ø–ª–∞—Ç–∏—Ç –ø–æ:</b> $${newCostPerPerson} (${Math.ceil(newCostPerPerson * SETTINGS.EXCHANGE_RATE * SETTINGS.SPECIAL_RATE)}‚ÇΩ)` : ''}`
    let newCostPart = `${status ? `\n\n–ï—Å–ª–∏ —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—à—å—Å—è, —Ç–æ —Ü–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è –±—É–¥–µ—Ç $${costPerPersonFuture} (${getPriceInUSD(costPerPersonFuture)}‚ÇΩ)` : ''}`
    let lotTagPart = `${status ? '#opened_lot' : '#closed_lot'}`

    let caption = `${header}\n\n${additionalInfoPart}\n\n${statusPart}\n\n${participantsPart}${costPart}${newCostPart}\n\n${lotTagPart}`

    if (captionIsTooLong(caption)) {
      participantsText = '';
      participants.forEach((part, id) => {
        let participantFullName = ``;
        if (part.username) {
          participantFullName += `@${part.username}`
        } else {
          participantFullName += part?.first_name
        }
        participantsText += `${participantFullName}; `
      })
      participantsPart = `<b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b>\n${participantsText}`
      caption = `${header}\n\n${additionalInfoPart}\n\n${statusPart}\n\n${participantsPart}${costPart}${newCostPart}\n\n${lotTagPart}`

      if (captionIsTooLong(caption)) {
        header = `<b>${author.slice(0, 20)}...</b>\n<i>${name.slice(0, 20)}...</i>`
        statusPart = `<b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:</b> ${organizator}`
        caption = `${header}\n\n${statusPart}\n\n${participantsPart}${costPart}`

        if (captionIsTooLong(caption)) {
          statusPart = organizator;
          participantsPart = participantsText;
          caption = `${statusPart}\n\n${participantsPart}${costPart}`
        }
      }
    }

    return caption;
  }
}