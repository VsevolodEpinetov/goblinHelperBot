const { Composer, Markup } = require("telegraf");
const util = require('../../../util');
const SETTINGS = require('../../../../settings.json');
const STUDIOS = require('../../../../studios.json');

module.exports = Composer.action('adminPollsCount', async (ctx) => {
  ctx.polls.core = [];
  STUDIOS.forEach(st => ctx.polls.core.push(st.name));
  await ctx.editMessageText(`–ê–≥–∞, –∏–¥–µ—è –æ—Ç–ª–∏—á–Ω–∞—è, –Ω–æ —è –ø–æ–∫–∞ —á—Ç–æ —Ö–∑, –∫–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å. –ü–æ—ç—Ç–æ–º—É –ø–æ–∫–∞ —á—Ç–æ —Ä—É—á–∫–∞–º–∏:) /count –Ω–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n–°—Ç—É–¥–∏–π –≤ —è–¥—Ä–µ: ${ctx.polls.core.length}\n–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–∏–π: ${ctx.polls.studios.length}`, {
    parse_mode: 'HTML',
    ...Markup.inlineKeyboard([
      [
        Markup.button.callback('–Ø–¥—Ä–æ', 'adminPollsCore'),
        Markup.button.callback('–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ', 'adminPollsStudios'),
      ],
      [
        Markup.button.callback('üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å', 'adminPollsStart'),
        Markup.button.callback('üîÑ –ü–æ—Å—á–∏—Ç–∞—Ç—å', 'adminPollsCount')
      ],
      [
        Markup.button.callback('‚Üê', 'adminMenu')
      ]
    ])
  })
});