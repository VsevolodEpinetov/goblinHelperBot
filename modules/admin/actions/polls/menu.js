const { Composer, Markup } = require("telegraf");
const util = require('../../../util');
const SETTINGS = require('../../../../settings.json');

module.exports = Composer.action('adminPolls', async (ctx) => {
  if (!ctx.polls.studios) ctx.polls.studios = [];
  if (!ctx.polls.core) ctx.polls.core = [];

  if (!ctx.callbackQuery.message.photo) {
    await ctx.editMessageText(`üìä <b>–ú–µ–Ω—é —Ä–∞–±–æ—Ç—ã —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è–º–∏</b> üìä\n\n–°—Ç—É–¥–∏–π –≤ —è–¥—Ä–µ: ${ctx.polls.core.length}\n–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–∏–π: ${ctx.polls.studios.length}`, {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [
          Markup.button.callback('–Ø–¥—Ä–æ', 'adminPollsCore'),
          Markup.button.callback('–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ', 'adminPollsStudios'),
        ],
        [
          Markup.button.callback('üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å', 'adminPollsStart'),
          Markup.button.callback('üîÑ –ü–æ—Å—á–∏—Ç–∞—Ç—å', 'adminPollsCount')
        ],
        [
          Markup.button.callback('‚Üê', 'adminMenu')
        ]
      ])
    })
  } else {
    await ctx.deleteMessage();
    await ctx.replyWithHTML(`üìä <b>–ú–µ–Ω—é —Ä–∞–±–æ—Ç—ã —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è–º–∏</b> üìä\n\n–°—Ç—É–¥–∏–π –≤ —è–¥—Ä–µ: ${ctx.polls.core.length}\n–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–∏–π: ${ctx.polls.studios.length}`, {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [
          Markup.button.callback('–Ø–¥—Ä–æ', 'adminPollsCore'),
          Markup.button.callback('–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ', 'adminPollsStudios'),
        ],
        [
          Markup.button.callback('üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å', 'adminPollsStart'),
          Markup.button.callback('üîÑ –ü–æ—Å—á–∏—Ç–∞—Ç—å', 'adminPollsCount')
        ],
        [
          Markup.button.callback('‚Üê', 'adminMenu')
        ]
      ])
    })
  }
});