const { Scenes, Markup } = require("telegraf");
const SETTINGS = require('../../../../settings.json')

const searchUser = new Scenes.BaseScene('SCENE_SEARCH_USER');

searchUser.enter(async (ctx) => {
  await ctx.replyWithHTML(`–ü—Ä–∏—à–ª–∏ <b>—Å—Ç—Ä–æ–∫—É</b>`).then(nctx => {
    ctx.session.toRemove = nctx.message_id;
    ctx.session.chatID = nctx.chat.id;
  });
});

searchUser.on('text', async (ctx) => {
  const searchString = ctx.message.text;
  if (ctx.message.text.length < 4) {
    await ctx.replyWithHTML(`–ú–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞. –ü—Ä–∏—à–ª–∏ –Ω–æ–≤—É—é <b>—Å—Ç—Ä–æ–∫—É</b>`).then(nctx => {
      ctx.session.toRemove = nctx.message_id;
      ctx.session.chatID = nctx.chat.id;
    });
    return;
  }

  let results = [];

  await ctx.deleteMessage(ctx.message.message_id);
  await ctx.deleteMessage(ctx.session.toRemove);

  for (const userID in ctx.users.list) {
    const userData = ctx.users.list[userID];
    const name = userData.first_name;
    const lastName = userData.last_name;
    const username = userData.username;
    if (userID.indexOf(searchString) > -1 || name.indexOf(searchString) > -1 || lastName.indexOf(searchString) > -1 || username.indexOf(searchString) > -1 ) {
      results.push(userID)
      break;
    }
  }

  let message = `–ù–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`;
  let menu = [
  ]

  ctx.userSession.results = results;

  if (results.length > 0) {
    message = `–ù–∞–π–¥–µ–Ω–æ ${results.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n`;
    menu = [];
    results.forEach((userID, id) => {
      message += `${id + 1}. ${ctx.users.list[userID].first_name}${ctx.users.list[userID].username != 'not_set' ? ` - @${ctx.users.list[userID].username}` : ''} (${userID})\n`
      menu.push(Markup.button.callback(id + 1, `showUser_${userID}`))
    })

    message += `\n–ö–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–µ—Å—Ç–∏?`
  }

  ctx.replyWithHTML(message, {
    ...Markup.inlineKeyboard([
      menu,
      [
        Markup.button.callback('‚Üê', 'adminParticipants'),
        Markup.button.callback('üîç', 'searchUser')
      ]
    ])
  })

  ctx.scene.leave();

});

module.exports = searchUser;
