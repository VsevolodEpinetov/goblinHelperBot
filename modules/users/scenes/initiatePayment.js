const { Scenes, Markup } = require("telegraf");
const SETTINGS = require('../../../settings.json')

const sceneSendPayment = new Scenes.BaseScene('SEND_PAYMENT');

sceneSendPayment.enter(async (ctx) => {
  let message = `üí∞ –û–ø–ª–∞—Ç–∞ `
  const purchaseInfo = ctx.userSession.purchasing;
  
  switch (purchaseInfo.type) {
    case 'group':
      if (purchaseInfo.isOld) {
        message += `–¥–æ—Å—Ç—É–ø–∞ –∫ ${purchaseInfo.year}-${purchaseInfo.month}\n\n<i>–°—Ç–æ–∏–º–æ—Å—Ç—å: 1800‚ÇΩ (–±–µ–∑ ‚ûï) / 4800‚ÇΩ (—Å ‚ûï)</i>\n\n`
      } else {
        message += `–º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏\n\n<i>–°—Ç–æ–∏–º–æ—Å—Ç—å: 600‚ÇΩ (–±–µ–∑ ‚ûï) / 1600‚ÇΩ (—Å ‚ûï)</i>\n\n`
      }
      break;
    case 'kickstarter':
      message += `–∫–∏–∫—Å—Ç–∞—Ä—Ç–µ—Ä–∞ ${purchaseInfo.name}\n\n<i>–°—Ç–æ–∏–º–æ—Å—Ç—å: ${purchaseInfo.price}‚ÇΩ</i>\n\n`
      break;
    case 'collection':
      message += `–ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${purchaseInfo.name}\n\n<i>–°—Ç–æ–∏–º–æ—Å—Ç—å: ${purchaseInfo.price}‚ÇΩ</i>\n\n`
      break;
    case 'release':
      message += `—Ä–µ–ª–∏–∑–∞ ${purchaseInfo.studioName} ${purchaseInfo.year}-${purchaseInfo.month}\n\n<i>–°—Ç–æ–∏–º–æ—Å—Ç—å: ${purchaseInfo.price}‚ÇΩ</i>\n\n`
      break;
  }

  message += `<u>–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã</u>\nüîó <b>–§–æ—Ä–º–∞ –¢-–ë–∞–Ω–∫:</b> <a href="https://www.tinkoff.ru/rm/epinetov.vsevolod1/HTZyQ19708/">–û–ø–ª–∞—Ç–∏—Ç—å</a>\nüí≥ <b>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</b> 2200 7010 6757 0900\nüì≤ <b>–°–ë–ü:</b> +7 999 200-45-52 (–¢-–ë–∞–Ω–∫)\n\nüì∑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏ —Å—é–¥–∞ —á–µ–∫/—Å–∫—Ä–∏–Ω—à–æ—Ç`


  await ctx.replyWithHTML(message, {
    ...Markup.inlineKeyboard([
      Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancelPayment')
    ])
  }).then(nctx => {
    ctx.session.toRemove = nctx.message_id;
  });
});

sceneSendPayment.on(['photo', 'document'], async (ctx) => {
  await ctx.deleteMessage(ctx.session.toRemove);

  const userId = ctx.message.from.id;
  const purchaseInfo = ctx.userSession.purchasing;
  const userInfo = ctx.users.list[purchaseInfo.userId];

  let message = `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ\n\n<b>–ò–º—è:</b> ${userInfo.first_name}\n<b>Telegram Username</b>: @${userInfo.username}\n<b>Telegram ID</b>: ${userId}\n`
  message += `\n–ü–æ–∫—É–ø–∞–µ—Ç: `

  const menu = [];

  switch (purchaseInfo.type) {
    case 'group':
      if (purchaseInfo.isOld) {
        message += `–¥–æ—Å—Ç—É–ø –∫ ${purchaseInfo.year}-${purchaseInfo.month}\n<i>–û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 1800‚ÇΩ / 3000‚ÇΩ / 4800‚ÇΩ</i>\n\n`
      } else {
        message += `—Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É\n\n<i>–û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 600‚ÇΩ / 1600‚ÇΩ</i>\n\n`
      }
      menu.push([
        Markup.button.callback('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–±—ã—á–Ω—É—é', `confirmPayment_${userId}_group_${purchaseInfo.year}_${purchaseInfo.month}_regular`),
        Markup.button.callback('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–ª—é—Å', `confirmPayment_${userId}_group_${purchaseInfo.year}_${purchaseInfo.month}_plus`)
      ])
      break;
    case 'kickstarter':
      message += `–∫–∏–∫—Å—Ç–∞—Ä—Ç–µ—Ä ${purchaseInfo.name}\n<i>–û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${purchaseInfo.price}‚ÇΩ</i>`
      menu.push([
        Markup.button.callback('–í—ã–¥–∞—Ç—å –∫–∏–∫—Å—Ç–∞—Ä—Ç–µ—Ä', `confirmPayment_${userId}_kickstarter_${purchaseInfo.ksId}`),
      ])
      break;
    case 'collection':
      message += `–ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é ${purchaseInfo.name}\n<i>–û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${purchaseInfo.price}‚ÇΩ</i>`
      menu.push([
        Markup.button.callback('–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø', `confirmPayment_${userId}_collection_${purchaseInfo.collectionId}`),
      ])
      break;
    case 'release':
      message += `—Ä–µ–ª–∏–∑ ${purchaseInfo.studioName} ${purchaseInfo.year}-${purchaseInfo.month}\n<i>–û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${purchaseInfo.price}‚ÇΩ</i>`
      menu.push([
        Markup.button.callback('–í—ã–¥–∞—Ç—å —Ä–µ–ª–∏–∑', `confirmPayment_${userId}_release_${purchaseInfo.studioName}_${purchaseInfo.year}_${purchaseInfo.month}`),
      ])
      break;
  }

  const currentTimestamp = Date.now();

  const newCtx1 = await ctx.telegram.sendMessage(SETTINGS.CHATS.EPINETOV, '-----------');
  const newCtx2 = await ctx.telegram.forwardMessage(SETTINGS.CHATS.EPINETOV, ctx.message.from.id, ctx.message.message_id);
  const newCtx3 = await  ctx.telegram.sendMessage(SETTINGS.CHATS.EPINETOV, message, {
    parse_mode: "HTML",
    ...Markup.inlineKeyboard([
      ...menu,
      [
        Markup.button.callback('üí≥ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', `changeBalance_${userId}`)
      ],
      [
        Markup.button.callback('‚ùå –ó–∞–∫–æ–Ω—á–∏—Ç—å', `finishAdminPayment_${userId}-${currentTimestamp}`)
      ]
    ]),
  })
  const newCtx4 = await ctx.telegram.sendMessage(SETTINGS.CHATS.EPINETOV, '-----------');

  if (!ctx.globalSession.toRemove) ctx.globalSession.toRemove = {}
  if (!ctx.globalSession.toRemove[SETTINGS.CHATS.EPINETOV]) ctx.globalSession.toRemove[SETTINGS.CHATS.EPINETOV] = {}
  ctx.globalSession.toRemove[SETTINGS.CHATS.EPINETOV][`${userId}-${currentTimestamp}`] = [newCtx1.message_id, newCtx2.message_id, newCtx3.message_id, newCtx4.message_id]

  await ctx.deleteMessage(ctx.message.message_id);
  ctx.replyWithHTML(`–¢–≤–æ—è –æ–ø–ª–∞—Ç–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –û–∂–∏–¥–∞–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –æ–±—ã—á–Ω–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤`)

  ctx.scene.leave();

});

sceneSendPayment.action('cancelPayment', async ctx => {
  await ctx.deleteMessage(ctx.session.toRemove);
  ctx.replyWithHTML(`–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π /start, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é`)
  ctx.scene.leave();
})

module.exports = sceneSendPayment;
 